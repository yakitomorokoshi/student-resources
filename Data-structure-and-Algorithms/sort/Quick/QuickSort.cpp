#include <bits/stdc++.h>

using namespace std;

//O(nlogn)+O(nlogn)=O(nlogn)
void QuickSort(int a[], int pivot, int n) {

	if(pivot==n){ //ngung de quy, khi mang con kich thuoc 1.
		return;
	}

	int p = pivot; //pivot local = pivot global.
	int i = n-1;
	int _switch = 1;

	while(i!=p){

		//dinh huong dieu kien hoan vi cua chot
		int l=p, r=i; 
		if(!_switch){ //switch=0, i ++> pivot local ====> r=p  
			r=p; l=i;
		}

		if(a[l]>a[r]){ //dieu kien hoan vi cua chot
			swap(a[p], a[i]);
			swap(p, i);
			_switch=!_switch; //cong tac chuyen doi trang thai tang giam bien i
		}
		_switch ? --i : ++i; //if _switch=1 {--i} else {++i}
	} //O(n)

	QuickSort(a, pivot, i); //O(logn)
	QuickSort(a, i+1, n);
}

int main() {

	int a[] = {8, 1, 0, 5, 88, 44, 12, 14, 11, 0, 4, 8, 100, 1088, 7, 4, 1, 1111, 4, 8, 100, 1088, 7, 4, 1, 1111, 4, 8, 100, 1088, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 100, 1088, 1111, 4, 8, 100, 1088, 14, 11, 0, 4, 8, 100, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 100, 1088, 1111, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1088, 7, 4, 1,14, 11, 0, 4, 8, 100, 1088, 7, 4, 1, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4};
	int n=sizeof(a)/sizeof(int);

	QuickSort(a,0,n);

	for(int i=0; i<n; i++)
		cout<<a[i]<<" ";
	cout<<endl;

	return 0;
}
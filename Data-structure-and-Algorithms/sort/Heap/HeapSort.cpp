#include <iostream>

using namespace std;

//O(logn).
void Heapify(int a[], int n, int P){// P in Parent

	int largest = P; //gia su
	int left_Child = 2*P + 1;
	int right_Child = 2*P +2;

	if(left_Child < n && a[largest]<a[left_Child]){
		largest = left_Child;
	}
	if(right_Child < n && a[largest]<a[right_Child]){
		largest = right_Child;
	}
	if(largest!=P){
		swap(a[largest], a[P]);
		Heapify(a, n, largest);//tiep tuc heapify tren nhanh cua chi muc vua trao Khoa cho chi muc P.
	}
}

//O(nlogn)+O(nlogn)=O(nlogn)
void HeapSort(int a[], int n){

	for(int i=(n/2)-1; i>=0; --i){
		Heapify(a, n, i);
	} //Heapify Mang dau vao thanh cong.

	//Trao doi Khoa cua chi muc Root voi Khoa cua chi muc n-1, tiep tuc Heapify tren doan chi muc Mang [0, i].
	for(int i=n-1; i > 0; --i){
		swap(a[0], a[i]);
		Heapify(a, i, 0);
	}

}


int main() {

	int a[] = {8, 1, 0, 5, 88, 44, 12, 14, 11, 0, 4, 8, 100, 1088, 7, 4, 1, 1111, 4, 8, 100, 1088, 7, 4, 1, 1111, 4, 8, 100, 1088, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 100, 1088, 1111, 4, 8, 100, 1088, 14, 11, 0, 4, 8, 100, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 100, 1088, 1111, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1088, 7, 4, 1,14, 11, 0, 4, 8, 100, 1088, 7, 4, 1, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 7, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4, 8, 4, 1, 1111, 8, 1, 0, 5, 88, 44, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 14, 11, 0, 4, 8, 100, 1111, 4};
	int n = sizeof(a) / sizeof(int);

	HeapSort(a, n);

	for(int i=0; i<n; i++){
		cout << a[i] << " "; 
	}

	return 0;
}